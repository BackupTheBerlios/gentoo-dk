<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /home/xubuntu/berlios_backup/github/tmp-cvs/gentoo-dk/Repository/docs/handbook/not_translated/Attic/hb-install-disk.xml,v 1.8 2004/01/21 22:12:31 broeman Exp $ -->

<sections>
<section>
<title>Introduktion til blok-enheder</title>
<subsection>
<title>Blok-enheder</title>
<body>

<p>
Vi vil tage et godt kig på disk-orienterede aspekter af Gentoo Linux
og Linux generelt, inklusiv Linux filesystemer, partitioner og blok-enheder.
Så, når du er blevet godt kendt med diske og filsystemer,
vil du blive vejledt igennem processen af at opsætte partioner og filsystemer
til din Gentoo Linux installation.
</p>

<p>
For at begynde, vil vi introducere begrebet <e>blok-enheder</e>. Den mest kendte blok-enhed er
sikkert den, som repræsenterer den første IDE-harddisk på et Linux system, med navnet
<path>/dev/hda</path>. Hvis dit system bruger SCSI-drev, så vil din første harddisk
være <path>/dev/sda</path>.
</p>

<p>
Blok-enhederne ovenover repræsenterer en abstrakt grænseflade til harddisken. 
Brugerprogrammer kan bruge disse blok-enheder, for at interagere med din harddisk uden at skulle bekymre
sig om at dine drev er IDE, SCSI eller noget andet. Programmet kan
simpelthen adressere lageret på harddisken, som et bundt af tilstødende,
vilkårlige-tilgængelige 512-byte blokke.
</p>

</body>
</subsection>
<subsection>
<title>Partitioner og portioner</title>
<body>

<p>
Selvom det er teoretisk muligt at bruge hele harddisken til dit Linux
system, er det næsten aldrig gjort i praksis. I stedet for er hele hardiskens blok-enheder
opsplittet i mindre, mere håndgribelige blok-enheder. På de fleste systemer er
disse kaldet <e>partitioner</e>. Andre arkitekturer bruger en lignende teknik,
kaldet <e>portioner (slices)</e>.
</p>

</body>
</subsection>
<subsection>
<title>Partitions</title>
<body>

<p>
Partitioner er opdelt i tre typer:
<e>primære</e>, <e>udvidet</e> og <e>logiske</e>.
</p>

<p>
En <e>primær</e> partition er en partition, som har dens informationer gemt på
MBR (master boot record). Da en MBR er meget lille (512 bytes) kan kun fire
primære partitioner blive defineret (f.eks. <path>/dev/hda1</path> til
<path>/dev/hda4</path>).
</p>

<p>
En <e>udvidet</e> partition er en speciel primær partition (som betyder at
den udvidet partition skal være én af de første fire mulige primære partitioner) som
indeholder flere partitioner. Sådan en partition eksisterede ikke oprindeligt, men da
fire partitioner var for få, nogen kom med idéen at udvide formateringsskemaet
uden at tabe bagud-kompatibilitet.
</p>

<p>
En <e>logisk</e> partition er en partition inden i den udvidet partition. Deres
definitioner er ikke placeret inde i MBR, men er deklareret inde i den udvidet
partition. 
</p>

</body>
</subsection>
<!-- TODO rewrite with LVM2 instructions when appropriate
<subsection>
<title>Logical Volumes</title>
<body>

<p>
Some people might find partitions and slices too restrictive. If you feel the
same way, you should take a look at LVM - - the <e>Logical Volume Manager</e>.
</p>

<p>
With LVM, you create partitions (or slices) the normal way, but you won't use
them to house your Linux system. Instead, you add another layer of storage
(namely the LVM layer) on which you install Gentoo. But what are the benefits of
LVM?
</p>

<p>
With LVM you can easily resize the volumes on which you have installed Gentoo.
You can also take a snapshot of a volume without freezing the system, making
your backup strategy more transparent for the users (and less troublesome).
Another advantage is that you can add several disks to a single volume (meaning
if one of your volumes is low on free space, you can extend it without having to
copy over files). 
</p>

<p>
An LVM is structured in three abstract items. You have a <e>physical volume</e>,
which is a partition, slice or disk you want to use to store the LVM layer on.
Then you have a <e>volume group</e> to which you assign certain physical
volumes. This volume group contains several <e>logical volumes</e> which are 
some sort of virtual partitions.
</p>

<p>
These logical volumes are used as regular partitions; however, if a logical
volume requires more space, it can use the available space in the volume group
to extend itself. If the volume group doesn't have sufficient available space,
you can add more physical volumes to it, fully transparent to the user (i.e. no
need to copy over data, freeze the system etc.). This makes LVM very flexible.
</p>

<p>
If you want to use LVM, you are advised to keep your root filesystem
(<path>/</path>) and your boot filesystem (<path>/boot</path>) outside the LVM.
If you want to place most of your files in a logical volume (<path>/home</path>,
<path>/usr</path>, <path>/tmp</path>, <path>/opt</path> and <path>/var</path> 
are used in this handbook) your root filesystem doesn't need to be very big 
(a mere 150 Mb will do just fine).
</p>

</body>
</subsection>
-->
</section>
<section>
<title>Design af et partitionsskema</title>
<subsection>
<title>Standard partitionsskema</title>
<body>

<p>
Hvis du ikke er interesseret i at tegne et partitionsoversigt selv, til dit system,
kan du bruge vores (non-LVM) partitionsskema, som vi bruger igennem denne bog:
</p>

<p>
Til x86 eller amd64:
</p>

<table>
<tr>
  <th>Partitioner</th>
  <th>Filsystem</th>
  <th>Størrelse</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>Boot partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Swap partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>ext3</ti>
  <ti>Resten af harddisken</ti>
  <ti>Root partition</ti>
</tr>
</table>

<p>
Til ppc:
</p>

<table>
<tr>
  <th>Partition NewWorld</th>
  <th>Partition OldWorld</th>
  <th>Filsystem</th>
  <th>Størrelse</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Ikke nødvendigt)</ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Swap partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path></ti>
  <ti>ext3</ti>
  <ti>Resten af harddisken</ti>
  <ti>Root partition</ti>
</tr>
</table>

<p>
Til Sparc:
</p>

<table>
<tr>
  <th>Sun Disklabel</th>
  <th>Filsystem</th>
  <th>Størrelse</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>Boot partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Swap partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>(none)</ti>
  <ti>Hele harddisken</ti>
  <ti>Sun Disk Label (required)</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>ext3</ti>
  <ti>Resten af harddisken</ti>
  <ti>Root partition</ti>
</tr>
</table>

<!-- TODO rewrite with LVM2 instructions when appropriate 
<p>
If you want to use LVM, you should create a small root partition instead of a
big one, ignore the swap partition and create a big partition as you will make 
the individual separation later when you define the logical volumes). Then mark 
this big partition of type "Linux LVM" or "LVM" (8e).
</p>
-->

<p>
Hvis du er ved at installere Gentoo fra en eksisterende distribution, burde du først
ændre størrelsen på dine eksisterende partitioner (hvis du ikke har noget plads fri) for at
kunne installere Gentoo. Du kan bruge <uri 
link="http://www.gnu.org/software/parted">GNU/Parted</uri> til at ændre størrelsen på
partitioner.
</p>

<p>
Hvis du er interesseret i at vide hvor stor en partition (eller logical 
volume) burde være, eller hvor mange partitioner (eller volumes) du behøver, læs videre. 
Ellers fortsæt nu med at partitionere din harddisk:
</p>

<ul>
<li>
  <uri link="#doc_chap3">Brug af fdisk på x86 eller amd64 for at partitionere din 
  harddisk</uri>
</li>
<li>
  <uri link="#doc_chap4">Brug af fdisk på Alpha for at partitionere din harddisk</uri>
</li>
<li>
  <uri link="#doc_chap5">Brug af fdisk på SPARC for at partitionere din harddisk</uri>
</li>
<li>
  <uri link="#doc_chap6">Brug af mac-fdisk på PPC for at partitionere din harddisk</uri>
</li>
<li>
  <uri link="#doc_chap7">Brug af fdisk on HPPA for at partitionere din harddisk</uri>
</li>
<li>
  <uri link="#doc_chap8">Brug af fdisk on MIPS for at partitionere din harddisk</uri>
</li>
</ul>

</body>
</subsection>
<subsection>
<title>Hvor mange og hvor stort?</title>
<body>

<p>
Antallet af partitioner er meget afhængigt af dit miljø. F.eks.,
hvis du har en hel del brugere, vil det være nærmest at lave dit
<path>/home</path> separat, idet at det forøger sikkerheden og gør det nemmere at lave backup.
Hvis du intallerer Gentoo for at arbejde som en mail-server, burde din 
<path>/var</path> være separat, idet alle emails er gemt inde i
<path>/var</path>. Et godt valg af filsystem vil derefter maksimere din 
ydelse. Spil-servere burde have en separat <path>/opt</path>, idet at de fleste
spil-servere bliver installeret der. Forklaringen er denne samme som for <path>/home</path>: 
sikkerhed og backup.
</p>

<p>
Som du kan se, afhænger det meget af hvad du vil opnå. Separate
partitioner eller volumes har følgende fordele:
</p>

<ul>
<li>
  Du kan vælge den mest ydelsesstærke filsystem til hver partition eller volume
</li>
<li>
  Hele dit system burde ikke løbe tør for fri harddisk-plads, hvis et ødelagt værktøj bliver
  ved med at skrive filer til en partition eller volume
</li>
<li>
  Hvis nødvendigt, et filsystem-tjek er reduceret i tid, idet flere tjek kan blive
  gjort parallelt (selvom det har fordelen er mere med flere harddiske end med
  at det gjort på flere partitioner)
</li>
<li>
  Sikkerhed kan blive forøget ved at mounte nogle partitioner eller volumes read-only (kun-læs), 
  nosuid (setuid bits er ignoreret), noexec (executable bits er ignoreret) osv.
</li>
</ul>

<p>
Dog har flere partitioner en stor ulempe: hvis det ikke er opsat
ordentligt, kan det betyde at have et system med masser
af fri plads på én partition og intet på en anden.
</p>

<p>
Som et eksempel på partitionering, viser vi dig en til en 20GB harddisk, brugt som
demonstrationsbærbar (som indeholder webserver, mailserver, gnome, ...):
</p>

<pre caption="Brug af filsystem eksempel">
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/hda5     ext3    509M  132M  351M  28% /
/dev/hda2     ext3    5.0G  3.0G  1.8G  63% /home
/dev/hda7     ext3    7.9G  6.2G  1.3G  83% /usr
/dev/hda8     ext3   1011M  483M  477M  51% /opt
/dev/hda9     ext3    2.0G  607M  1.3G  32% /var
/dev/hda1     ext2     51M   17M   31M  36% /boot
/dev/hda6     swap    516M   12M  504M   2% &lt;not mounted&gt;
<comment>(Upartitioneret plads til fremtidig brug: 2 GB)</comment>
</pre>

<p>
<path>/usr</path> er pænt fyldt op (83% brugt) her, men når først
alt softwaren er installeret, vil <path>/usr</path> ikke tendere til at gro særligt meget.
Til <path>/var</path> kan folk måske tro at der er blevet afsat
for meget plads. Dog kompilerer Gentoo alle programmer inde i
<path>/var/tmp/portage</path>, så du burde have <path>/var</path> med
minimum 1GB fri plads, hvis du ikke vil kompilere store programmer, op til 3GB fri plads, hvis 
kompileringen af KDE og OpenOffice.org på samme tid ikke bliver til et problem.
</p>

<p>
Partitionere nu din(e) harddisk(e) ved brug af instruktionerne, som er tilgængeligt til dit
arkitektur, som eksempel:
</p>

<ul>
<li>
  <uri link="#doc_chap3">Brug af fdisk på x86 eller amd64 for at partitionere din 
  harddisk</uri>
</li>
<li>
  <uri link="#doc_chap4">Brug af fdisk på Alpha for at partitionere din harddisk</uri>
</li>
<li>
  <uri link="#doc_chap5">Brug af fdisk på SPARC for at partitionere din harddisk</uri>
</li>
<li>
  <uri link="#doc_chap6">Brug af mac-fdisk på PPC for at partitionere din harddisk</uri>
</li>
<li>
  <uri link="#doc_chap7">Brug af fdisk on HPPA for at partitionere din harddisk</uri>
</li>
<li>
  <uri link="#doc_chap8">Brug af fdisk on MIPS for at partitionere din harddisk</uri>
</li>
</ul>

</body>
</subsection>
</section>
<section>
<title>Brug af fdisk på x86 eller amd64 for at partitionere din harddisk</title>
<subsection>
<body>

<impo>
Kun brugere med <e>x86</e> eller <e>amd64</e> baserede systemer burde læse denne
sektion.
</impo>

<p>
De følgende dele forklaerer hvordan man laver partitionslayoutet, som
beskrevet førhen, nemlig:
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>Boot partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>Swap partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Root partition</ti>
</tr>
</table>

<p>
Du kan ændre partitionslayoutet til hvordan du ønsker det.
</p>

</body>
</subsection>
<subsection>
<title>Et kig på den nuværende partitionslayout</title>
<body>

<p>
<c>fdisk</c> er en populær og et kraftfuld værktøj til at splitte din harddisk ind i partitioner.
Fyr op for din <c>fdisk</c> på din harddisk (i vores eksempel, bruger vi
<path>/dev/hda</path>):
</p>

<pre caption="Start af fdisk">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Når du er i <c>fdisk</c>, vil du blive hilst af en prompt, som ligner dette:
</p>

<pre caption="fdisk prompt">
Command (m for help): 
</pre>

<p>
Tast <c>p</c> for at vise din harddisks nuværende opsætning:
</p>

<pre caption="Et eksempel på en partitionsopsætning">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help): 
</pre>

<p>
Denne specifikke harddisk er opsat til at huse syv Linux filesystemer (partitionerne,
hver især, er vist som "Linux") samt en swap-partition (vist
som "Linux swap"). 
</p>

</body>
</subsection>
<subsection>
<title>Slette alle partitioner</title>
<body>

<p>
Vi vil først slette alle de eksisterende partitioner fra harddisken. Tast <c>d</c> for
at slette en partition. F.eks. for at slette en eksisterende <path>/dev/hda1</path>:
</p>

<pre caption="Slette en partition">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Partitionen er blevet planlagt til at blive slettet. Den vil nu ikke længere blive vist, når du
taster <c>p</c>, men den er ikke slettet før dine ændringer er blevet gemt. Hvis
du har lavet en fejl og vil afbryde uden at gemme, tast <c>q</c>
med det samme og tryk Enter og din partition vil ikke blive slettet.
</p>

<p>
Forudsat at du nu virkelig vil udslette alle partitioner på dit
system, tast gentagne gange <c>p</c> for at udskrive partitionslisten og tast
<c>d</c> og nummeret på partitionen, for at slette den. Til sidst vil du ende
med en partitionstabel uden noget i:
</p>

<pre caption="En tom partitionstabel">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Nu da partitionstabellen, som ligger i hukkommelsen, er tom, er det nu tid til at lave
partitioner. Vi vil bruge standard partitionsskemaet, som diskuteret tidligere.
Selvfølgelig, følg ikke disse instruktioner til punkt og prikke, hvis du ikke vil have den
samme partitionsskema!
</p>

</body>
</subsection>
<subsection>
<title>Oprettelse af boot-partition</title>
<body>

<p>
Først vil vi en lille boot-partition. Tast <c>n</c> for at oprette en ny partition,
så <c>p</c> for at vælge en primær partition, fulgt af <c>1</c> for at vælge den
første primære partition. Når du bliver spurgt om den første cylinder, tryk Enter. Når du
bliver spurgt om den sidste cylinder, tast <c>+32M</c> for at lave en partition på 32 Mbyte
i størrelse:
</p>

<pre caption="Oprettelse af boot-partition">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Tryk Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Når du nu taster <c>p</c>, vil du se følgende partitionsudskrift:
</p>

<pre caption="Oprettet boot-partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>

<p>
Vi mangler at gøre denne partition startbar. Tast <c>a</c> for at skifte opstartsflag
på denne partition. Hvis du taster <c>p</c> igen, vil du se at
<path>*</path> er placeret i "Boot"-kolonnen.
</p>

</body>
</subsection>
<subsection>
<title>Oprettelse af swap-partition</title>
<body>

<p>
Lad os nu lave en swap-partition. For at gøre dette, tast <c>n</c> for at lave en ny
partition, så <c>p</c> for at fortælle fdisk, at du vil have en primær partition. Tast
så <c>2</c> for at lave den anden primære partition, <path>/dev/hda2</path> i
vores eksempel. Når du bliver spurgt om den første cylinder, tryk Enter. Når du bliver spurgt om
den sidste cylinder, tast <c>+512M</c> for at oprette en partition på 512MB i størrelse. Efter
at du har gjort det, tast <c>t</c> for at indstille partitionstypen, <c>2</c> for at vælge
partitionen, som du lige har oprettet, og tast så <c>82</c> for at indstille partitionenstypen
til "Linux Swap". Efter afslutningen af disse trin, ved at taste <c>p</c>, burde
vise en partitionstabel, som ser ud som dette:
</p>

<pre caption="Partitionsliste efter oprettelse af en swap-partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>Oprettelse af root-partition</title>
<body>

<p>
Til sidst, lad os oprette root-partitionen. For at gøre dette, tast <c>n</c> for at oprette en
ny partition, så <c>p</c> for at fortælle fdisk, at du vil have en primær partition. 
så tast <c>3</c> for at oprette den tredje primære partition, <path>/dev/hda3</path>
i vores tilfælde. Når du bliver spurgt om den første cylinder, tryk Enter. Når du bliver spurgt om
den sidste cylinder, tryk Enter for at oprette en partition, som tager resten af
den frie plads, som er tilbage på din harddisk. Efter at have afsluttet disse trin, ved at taste <c>p</c> 
burde vise en partitionstabel, som ser ud som dette:
</p>

<pre caption="Partitionsliste efter oprettelsen af root-partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>


</body>
</subsection>
<subsection>
<title>Gemme partitionslayout</title>
<body>

<p>
For at gemme partitionslayouet og afslutte <c>fdisk</c>, tast <c>w</c>.
</p>

<pre caption="Gem og afslut fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Nu da dine partitioner er oprette, kan du nu fortsætte med <uri
link="#filesystems">Oprettelse af filsystemer</uri>.
<!-- TODO reactivate when LVM2 instructions are boarded 
, undtagen hvis du har valgt at bruge LVM,
hvilket du burde først læse <uri link="#lvm">Valgfrit: Brug af
LVM</uri>.
-->
</p>

</body>
</subsection>
</section>
<section>
<title>Brug af fdisk på Alpha for at partitionere din harddisk</title>
<subsection>
<body>

<impo>
Kun brugere af <e>Alpha</e> baserede systemer burde læse denne sektion.
</impo>

<p>
De følgende dele vil forklare hvordan man opretter portionslayout-eksemplet, beskrevet
tidligere, nemlig:
</p>

<table>
<tr>
  <th>Portion</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti><path>/dev/sdaa</path></ti>
  <ti>Swap portion</ti>
</tr>
<tr>
  <ti><path>/dev/sdab</path></ti>
  <ti>Root portion</ti>
</tr>
<tr>
  <ti><path>/dev/sdac</path></ti>
  <ti>Hele harddisken (krævet)</ti>
</tr>
</table>

<p>
Du kan ændre dit portionslayout efter dit eget valg.
</p>


</body>
</subsection>
<subsection>
<title>Identifikation af tilrådige harddiske</title>
<body>

<p>
For at finde ud af hvilke harddiske, som kører, brug de følgende kommandoer:
</p>

<pre caption="Identifikation af tilrådige harddiske">
<comment>(Til IDE-harddiske)</comment>      # <i>dmesg | grep 'drive$'</i>
<comment>(Til SCSI-harddiske)</comment>     # <i>dmesg | grep 'scsi'</i>
</pre>

<p>
Fra dette output, burde du kunne se hvilke diske, som er blevet fundet og deres
respektive <path>/dev</path> postering. I de følgende dele, forventer vi at
harddisken er en SCSI-harddisk på <path>/dev/sda</path>.
</p>

<p>
Fyr nu op for <c>fdisk</c>:
</p>

<pre caption="Start af fdisk">
# <i>fdisk /dev/sda</i>
</pre>

</body>
</subsection>
<subsection>
<title>Slette alle portioner</title>
<body>

<p>
Vi starter med at slette alle portioner <e>undtagen</e> 'c'-portionen. Det følgende
viser hvordan man sletter en portion (i eksemplet bruger vi 'a'). Gentag processen for at
slette alle de andre portioner (igen, undtagen 'c'-portionen).
</p>

<p>
Brug <c>p</c> for at se alle eksisterende portioner. <c>d</c> er brugt til at slette en portion.
</p>

<pre caption="Slette en portion">
BSD disklabel command (m for help): <i>p</i>

8 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        1       235*      234*    4.2BSD     1024  8192    16
  b:      235*      469*      234*      swap
  c:        1      5290*     5289*    unused        0     0
  d:      469*     2076*     1607*    unused        0     0
  e:     2076*     3683*     1607*    unused        0     0
  f:     3683*     5290*     1607*    unused        0     0
  g:      469*     1749*     1280     4.2BSD     1024  8192    16
  h:     1749*     5290*     3541*    unused        0     0

BSD disklabel command (m for help): <i>d</i>
Partition (a-h): <i>a</i>
</pre>

<p>
Efter at gentage denne process for alle portioner, burde en liste vise dig noget
lignende dette:
</p>

<pre caption="Se et tomt skema">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>Oprettelse af swap-portion</title>
<body>

<p>
På Alpha baserede systemer behøver du ikke at separere boot-partitionen. Dog kan den
første cylinder ikke blive brugt, da <c>aboot</c>-billedfilen vil blive placeret her.
</p>

<p>
Vi vil oprette en swap-portion, som starter på den tredje cylinder, med en total
størrelse på 1 GByte. Brug <c>n</c> for at oprette en ny portion. Efter at have oprettet portionen,
vil vi ændre dens type til <c>1</c>, som betyder <e>swap</e>.
</p>

<pre caption="Oprettelse af swap-portion">
BSD disklabel command (m for help): <i>n</i>
Partition (a-p): <i>a</i>
First cylinder (1-5290, default 1): <i>3</i>
Last cylinder or +size or +sizeM or +sizeK (3-5290, default 5290): <i>+1024M</i>

BSD disklabel command (m for help): <i>t</i>
Partition (a-c): <i>a</i>
Hex code (type L to list codes): <i>1</i>
</pre>

<p>
Efter disse trin, burde du se et layout lignende til det følgende:
</p>

<pre caption="Portionslayout efter oprettelse af swap-portion">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        3      1003      1001       swap
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>Oprettelse af root-portion</title>
<body>

<p>
Vi vil nu oprette root-portionen, som starter fra den første cylinder <e>efter</e>
swap-portionen. Brug <c>p</c>-kommandoen for at se hvor swap-portionen slutter. I
vores eksempel, er dette ved 1003, som gør at root-portionen starter ved 1004.
</p>

<p>
Et andet problem er at der er på nuværende tidspunkt en fejl i <c>fdisk</c>, som gør at den tror at
antallet af tilrådige cylindere er højere det reelle antal af cylindere. I
andre ord, når du bliver spurgt om den sidste cylinder, formindsk cylinder-nummeret
(i vores eksempel: 5290) med én.
</p>

<p>
Når portionen er oprettet, ændrer vi typen til <c>8</c>, som er <e>ext2</e>.
</p>

<pre caption="Oprettelse af root-portion">
D disklabel command (m for help): <i>n</i>
Partition (a-p): <i>b</i>
First cylinder (1-5290, default 1): <i>1004</i>
Last cylinder or +size or +sizeM or +sizeK (1004-5290, default 5290): <i>5289</i>

BSD disklabel command (m for help): <i>t</i>
Partition (a-c): <i>b</i>
Hex code (type L to list codes): <i>8</i>
</pre>

<p>
Din portionslayout burde nu se ud som dette her:
</p>

<pre caption="Se portionslayout">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        3      1003      1001       swap
  b:     1004      5289      4286       ext2
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>Gem portionslayoutet og afslut</title>
<body>

<p>
Gem <c>fdisk</c> ved at taste <c>w</c>. Dette vil også gemme dit portionslayout.
</p>

<pre caption="Gem og afslut fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Nu da dine portioner er oprette, kan du nu fortsætte med <uri
link="#filesystems">Oprettelse af filsystmer</uri>.
<!-- TODO reactivate when LVM2 instructions are boarded
, undtagen hvis du har valgt at bruge LVM,
hvilket du burde først læse <uri link="#lvm">Valgfrit: Brug af
LVM</uri>.
-->
</p>

</body>
</subsection>
</section>
<section>
<title>Brug af fdisk på SPARC for at partionere din harddisk</title>
<subsection>
<body>

<impo>
Kun brugere på <e>SPARC</e> baserede systemer burde læse denne sektion.
</impo>

<p>
De følgende dele forklarer hvordan man opretter partitionslayout-eksemplet, beskrevet
tidligere, nemlig:
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>Boot-partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>Swap-partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Sun Disk Label (krævet)</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Root-partition</ti>
</tr>
</table>

<p>
Du kan ændre din partitionslayout efter dine egne ønsker.
</p>


</body>
</subsection>
<subsection>
<title>Fyr op for fdisk</title>
<body>

<p>
Start <c>fdisk</c> med din harddisk som tilføjelse:
</p>

<pre caption="Start af fdisk">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Du burde blive hilst af en fdisk-prompt:
</p>

<pre caption="fdisk-prompten">
Command (m for help):
</pre>

<p>
For at se de tilrådige partitioner, tryk <c>p</c>:
</p>

<pre caption="Liste af tilrådige partitioner">
Command (m for help): <i>p</i>

Disk /dev/hda (Sun disk label): 240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 bytes

Device Flag    Start       End    Blocks   Id  System
/dev/hda1   *         1        14    105808+  83  Linux
/dev/hda2            15        81    506520   82  Linux swap
/dev/hda3             0      3876  29302528    5  Whole Disk
/dev/hda4            82      3876  28690200   83  Linux
</pre>

<p>
Notér at <c>Sun disk label</c> er med i output. Hvis den mangler, bruger harddisken
DOS-partitionering, ikke Sun-partitionerng. I dette tilfælde, brug <c>s</c>
for at sikre at harddisken har en sun partitionstabel.
</p>

</body>
</subsection>
<subsection>
<title>Slette eksisterende partitioner</title>
<body>

<p>
Det er tid til at slette alle eksisterende partitioner. For at gøre dette, tast <c>d</c> og tryk
Enter. Du vil blive spurgt for partitionsnummer, som du ønsker at
slette. For at slette en eksisterende <path>/dev/hda1</path>, skal du taste:
</p>

<pre caption="Slette en partition">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Da vi forventer at du vil slette alle eksisterende partitioner, tast <c>p</c> for at se
tilrådige partitioner, og <c>d</c> for at slette disse, én efter én. Hvis du føler at
du har lavet en fejl, tast <c>q</c> med det samme -- <c>fdisk</c> gemmer ikke
ændrer, lavet her og nu, på partitionerne, men holder det i hukommelsen. Kun når du
taster <c>w</c> er alle partitioner gemt.
</p>

<p>
Efter at have slette alle partitioner, burde du have en partitionslayout lignende til det
følgende:
</p>

<pre caption="Se et tomt partitionsskema">
Command (m for help): <i>p</i>

Disk /dev/hda (Sun disk label): 240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 bytes

Device Flag    Start       End    Blocks   Id  System
</pre>


</body>
</subsection>
<subsection>
<title>Oprettelse af Sun Disk Label'en</title>
<body>

<p>
Nu da partitionstabellen, som er holdt i hukkommelsen, er tom, er vi klar til at oprette 'Sun
Disk Label'-partitionen. For at gøre dette, tast <c>n</c> for at oprette en ny partition, så 
tast <c>3</c> for at oprette partitionen. Når der bliver spurgt om den første cylinder, 
tast Enter. Når der bliver spurgt om den sidste cylinder, tast Enter. Efter at du har gjort
dette, tast <c>t</c> for at indstille partitionstypen, og tast derefter <c>5</c> for at indstille
partitionstypen til "Whole disk" (hele disken).
</p>

<pre caption="Trin til at oprette en Sun Disk Label">
Command (m for help): <i>n</i>
Partition number (1-4): <i>3</i>
First cylinder (1-3876, default 0): <i>0</i>
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <comment>(Tryk Enter)</comment>
Using default value 3876

Command (m for help): <i>t</i>
Partition number (1-8): <i>3</i>
Hex code (type L to list codes): <i>5</i>
</pre>

<p>
Efter at have afsluttet disse trin, ved at taste <c>p</c> burde vise en partitionstabel,
som ser ud som dette:
</p>

<pre caption="Se partitionslayout">
Command (m for help): <i>p</i>

Disk /dev/hda (Sun disk lable): 240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 bytes

Device Flag    Start       End    Blocks   Id  System
/dev/hda3             0      3876  29302528    5  Whole disk
</pre>

</body>
</subsection>
<subsection>
<title>Oprettelse af boot-partition</title>
<body>

<p>
Vi er klar til at oprette boot-partitionen. For at gøre dette, tast <c>n</c> for at oprette en
ny partition, tast da <c>1</c> for at oprette partitionen. Når der bliver spurgt efter den
første cylinder, tryk Enter. Når der bliver spurgt efter den sidste cylinder, tast <c>+32M</c>
for at oprette en partition på <c>32MB</c> i størrelse. Vær sikker på at hele boot-partitionen
er holdt inde for de første 2GB af harddisken. 
Du kan se output fra disse trin, forneden:
</p>

<pre caption="Oprettelse af boot-partition">
Command (m for help): <i>n</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Tryk Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Når du nu taster <c>p</c>, burde du se følgende partition-udskrift:
</p>

<pre caption="Liste af partitionslayout">
Command (m for help): <i>p</i>

Disk /dev/hda (Sun disk label): 240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 bytes

Device Flag    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda3             0      3876  29302528    5  Whole disk
</pre>
</body>
</subsection>
<subsection>
<title>Oprettelse af swap-partition</title>
<body>

<p>
Herefter, lad os nu oprette swap-partitionen. For at gøre dette, tast <c>n</c> for at oprette en ny
partition, så <c>2</c> for at oprette en anden partition, <path>/dev/hda2</path>
i vores tilfælde. Når der bliver spurgt efter den første cylinder, tryk Enter. Når der bliver spurgt 
efter den sidste cylinder, tast <c>+512M</c> for at oprette en partition på 512MB i størrelse. Efter 
at du har gjort dette, tast <c>t</c> for at indstille partitionstypen, og indtast derefter
<c>82</c> for at indstille partitionstype til "Linux Swap". Efter at have afsluttet disse
trin, indtastningen af <c>p</c> burde vise en partitionstabel, som ser ud som 
dette:
</p>

<pre caption="Liste af tilrådige partitioner">
Command (m for help): <i>p</i>

Disk /dev/hda (Sun disk label): 240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 bytes

Device Flag    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        81    506520   82  Linux swap
/dev/hda3             0      3876  29302528    5  Whole disk
</pre>

</body>
</subsection>
<subsection>
<title>Oprettelse af root-partition</title>
<body>

<p>
Til sidst, lad os oprette root-partitionen. For at gøre dette, tast <c>n</c> for at oprette en
ny partition, derefter tast <c>4</c> for at oprette en tredje partition, 
<path>/dev/hda4</path> i vores tilfælde. Når der bliver spurgt efter den første cylinder, tryk 
Enter. Når der bliver spurgt efter den sidste cylinder, tryk Enter for at oprette en partition,
som optager resten af den frie harddisk-plads. Efter at have afsluttet
disse trin, ved at taste <c>p</c> burde vise en partitionstabel, som ser ud som
dette her:
</p>

<pre caption="Liste af komplet partitionstabel">
Command (m for help): <i>p</i>

Disk /dev/hda (Sun disk label): 240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 bytes

Device Flag    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        81    506520   82  Linux swap
/dev/hda3             0      3876  29302528    5  Whole disk
/dev/hda4            82      3876  28690200   83  Linux
</pre>

</body>
</subsection>
<subsection>
<title>Gem og afslut</title>
<body>

<p>
For at gemme dit partitionslayout og afslutte <c>fdisk</c>, tast <c>w</c>:
</p>

<pre caption="Gem og afslut fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Nu da dine partitioner er oprettet, kan du fortsætte med <uri
link="#filesystems">Oprettelse af filsystemer</uri>.
<!-- TODO reactivate when LVM2 instructions are boarded
, undtagen hvis du har valgt at bruge LVM,
hvilket du burde først læse <uri link="#lvm">Valgfrit: Brug af
LVM</uri>.
-->
</p>

</body>
</subsection>
</section>
<section>
<title>Using mac-fdisk on PPC to Partition your Disk</title>
<body>

<p>
At this point, create your partitions using <c>mac-fdisk</c>:
</p>

<pre caption="Starting mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
First delete the partitions you have cleared previously to make room for your
Linux partitions. Use <c>d</c> in <c>mac-fdisk</c> to delete those partition(s).
It will ask for the partition number to delete.
</p>

<p>
Second, create an <e>Apple_Bootstrap</e> partition by using <c>b</c>. It will
ask for what block you want to start. If you previously selected <c>3</c> as
partition number, enter <c>3p</c>.
</p>

<p>
Now create a swap partition by pressing <c>c</c>. Again <c>mac-fdisk</c> will
ask for what block you want to start this partition from. As we used <c>3</c>
before to create the Apple_Bootstrap partition, you now have to enter
<c>4p</c>. When you're asked for the size, enter <c>512M</c> (or whatever size
you want -- 512 is recommended though). When asked for a name, enter <c>swap</c>
(mandatory).
</p>

<p>
To create the root partition, enter <c>c</c>, followed by <c>5p</c> to select
from what block the root partition should start. When asked for the size, enter
<c>5p</c> again. <c>mac-fdisk</c> will interprete this as "Use all available
space". When asked for the name, enter <c>root</c> (mandatory).
</p>

<p>
To finish up, write the partition to the disk using <c>w</c> and <c>q</c> to
quit <c>mac-fdisk</c>.
</p>

<p>
Now that your partitions are created, you can now continue with <uri
link="#filesystems">Creating Filesystems</uri>.
<!-- TODO reactivate when LVM2 instructions are boarded 
, unless you have chosen to use LVM
in which case you should first read <uri link="#lvm">Optional: Using
LVM</uri>.
-->
</p>

</body>
</section>
<section>
<title>Using fdisk on HPPA to Partition your Disk</title>
<body>

<p>
Use <c>fdisk</c> to create the partitions you want:
</p>

<pre caption="Partitioning the disk">
# <i>fdisk /dev/sda</i>
</pre>

<p>
PALO needs a special partition to work. You have to create a partition of at
least 16Mb at the beginning of your disk. The partition type must be of type
<e>f0</e> (Linux/PA-RISC boot).
</p>

<impo>
If you ignore this and continue without a special PALO partition, your system
will stop loving you and fail to start.
</impo>

<p>
Also, if your disk is larger than 2Gb, make sure that the boot partition is in
the first 2Gb of your disk. PALO is unable to read a kernel after the 2Gb limit.
</p>

<p>
Now that your partitions are created, you can now continue with <uri
link="#filesystems">Creating Filesystems</uri>.
<!-- TODO reactivate when LVM2 instructions are boarded
, unless you have chosen to use LVM
in which case you should first read <uri link="#lvm">Optional: Using
LVM</uri>.
-->
</p>

</body>
</section>
<section>
<title>Using fdisk on MIPS to Partition your Disk</title>
<!-- This entire section is copy/pasted from Kumba's original text. It should
     probably be rewritten, but it seems a bit complicated.
     Someone donate me a MIPS? :) 

       ~SwifT
-->
<subsection>
<title>Creating an SGI Disk Label</title>
<body>

<p>
All disks in an SGI System require an <e>SGI Disk Label</e>, which serves a 
similar function as Sun &amp; MS-DOS disklabels -- It stores information about 
the disk partitions. Creating a new SGI Disk Label will create two special 
partitions on the disk:
</p>

<ul>
  <li>
    <e>SGI Volume Header</e> (9th partition): This partition is important. It
    is where the kernel images will go. To store kernel images, you will utilize
    the tool known as <c>dvhtool</c> to copy kernel images to this partition. 
    You will then be able to boot kernels from this partition via the SGI PROM 
    Monitor.
  </li>
  <li>
    <e>SGI Volume</e> (11th partition): This partition is similar in purpose to
    the Sun Disklabel's third partition of "Whole Disk". This partition spans
    the entire disk, and should be left untouched. It serves no special purpose
    other than to assist the PROM in some undocumented fashion (or it is used by
    IRIX in some way).
  </li>
</ul>

<warn>
The SGI Volume Header <e>must</e> begin at cylinder 0. Failure to do so means
you won't be able to boot from the disk.
</warn>

<p>
The following is an example excerpt from an <c>fdisk</c> session. Read and
tailor it to your needs...
</p>

<pre caption="Creating an SGI Disklabel">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>x</i>

Expert command (m for help): <i>m</i>
Command action
   b   move beginning of data in a partition
   c   change number of cylinders
   d   print the raw data in the partition table
   e   list extended partitions
   f   fix partition order
   g   create an IRIX (SGI) partition table
   h   change number of heads
   m   print this menu
   p   print the partition table
   q   quit without saving changes
   r   return to main menu
   s   change number of sectors/track
   v   verify the partition table
   w   write table to disk and exit

Expert command (m for help): <i>g</i>
Building a new SGI disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content will be unrecoverably lost.

Expert command (m for help): <i>r</i>

Command (m for help): <i>p</i>

Disk /dev/sda (SGI disk label): 64 heads, 32 sectors, 17482 cylinders
Units = cylinders of 2048 * 512 bytes

----- partitions -----
Pt#     Device  Info     Start       End   Sectors  Id  System
 9:  /dev/sda1               0         4     10240   0  SGI volhdr
11:  /dev/sda2               0     17481  35803136   6  SGI volume
----- Bootinfo -----
Bootfile: /unix
----- Directory Entries -----

Command (m for help):
</pre>

<note>
If your disk already has an existing SGI Disklabel, then fdisk will not allow
the creation of a new label. There are two ways around this. One is to create a
Sun or MS-DOS disklabel, write the changes to disk, and restart fdisk. The
second is to overwrite the partition table with null data via the following
command: <c>dd if=/dev/zero of=/dev/sda bs=512 count=1</c>.
</note>

</body>
</subsection>
<subsection>
<title>Getting the SGI Volume Header to just the right size</title>
<body>

<p>
Now that an SGI Disklabel is created, partitions may now be defined. In the
above example, there are already two partitions defined for you. These are the
special partitions mentioned above and should not normally be altered. However,
for installing Gentoo, we'll need to load multiple kernel images directly into
the volume header, as there is no supported SGI Bootloader available in Portage
yet. The volume header itself can hold up to <e>eight</e> images of any size, 
with each image allowed eight-character names.
</p>

<p>
The process of making the volume header larger isn't exactly straight-forward --
there's a bit of a trick to it. One cannot simply delete and re-add the volume
header due to odd fdisk behavior. In the example provided below, we'll create a
50MB Volume header in conjunction with a 50MB /boot partition. The actual layout
of your disk may vary, but this is for illustrative purposes only.
</p>

<pre caption="Resizing the SGI Volume Header correctly">
Command (m for help): <i>n</i>
Partition number (1-16): <i>1</i>
First cylinder (5-8682, default 5): <i>51</i>
 Last cylinder (51-8682, default 8682): <i>101</i>
<comment>(Notice how fdisk only allows Partition #1 to be re-created starting at a minimum of cylinder 5)</comment>
<comment>(Had you attempted to delete &amp; re-create the SGI Volume Header this way, this is the same issue
 you would have encountered.)</comment>
<comment>(In our example, we want /boot to be 50MB, so we start it at cylinder 51 (the Volume Header needs to 
 start at cylinder 0, remember?), and set its ending cylinder to 101, which will roughly be 50MB (+/- 1-5MB))</comment>

Command (m for help): <i>d</i>
Partition number (1-16): <i>9</i>
<comment>(Delete Partition #9 (SGI Volume Header))</comment>

Command (m for help): <i>n</i>
Partition number (1-16): <i>9</i>
First cylinder (0-50, default 0): <i>0</i>
 Last cylinder (0-50, default 50): <i>50</i>
<comment>(Re-Create Partition #9, ending just before Partition #1)</comment>
</pre>

</body>
</subsection>
<subsection>
<title>Final partition layout</title>
<body>

<p>
Once this is done, you are safe to create the rest of your partitions as you see
fit. After all your partitions are laid out, make sure you set the partition ID
of your swap partition to <c>82</c>, which is Linux Swap. By default, it will be
<c>83</c>, Linux Native. 
</p>

<p>
Now that your partitions are created, you can now continue with <uri
link="#filesystems">Creating Filesystems</uri>.
<!-- TODO reactivate when LVM2 instructions are boarded
, unless you have chosen to use 
LVM in which case you should first read <uri link="#lvm">Optional: Using
LVM</uri>.
-->
</p>

</body>
</subsection>
</section>
<!-- TODO rewrite with LVM2 instructions when appropriate
<section id="lvm">
<title>Optional: Using LVM</title>
<subsection>
<title>Initialising the Partitions</title>
<body>

<p>
To use LVM, you first need to activate LVM and initialize your created 
partitions. To do so, use <c>vgscan</c> (activate LVM) and <c>pvcreate</c> 
(initialize partitions). In this example, we assume that <path>/dev/hda1</path> 
is a regular boot partition, <path>/dev/hda2</path> a regular (but small) root 
partition and <path>/dev/hda3</path> a big partition for the LVM.
</p>

<pre caption="Activating and Initialising LVM partitions">
# <i>vgscan</i>
# <i>pvcreate /dev/hda3</i>
</pre>

</body>
</subsection>
<subsection>
<title>Set up the Volume Group</title>
<body>

<p>
Now we need to setup the volume group. We will use <c>vgcreate</c> to do so, but
<c>vgcreate</c> needs the full (DevFS-style) path to the device file. So we
first find out where these device files are located:
</p>

<pre caption="Getting to know the full location">
# <i>ls -l /dev/hda3</i>
lr-xr-xr-x    1 root     root           33 Oct 21  2003 /dev/hda3 -&gt; ide/host0/bus0/target0/lun0/part3
</pre>

<p>
Now we create the volume group called "vg":
</p>

<pre caption="Create the VG group">
# <i>vgcreate vg /dev/ide/host0/bus0/target0/lun0/part3</i>
</pre>

</body>
</subsection>
<subsection>
<title>Creating the Logical Volumes</title>
<body>

<p>
Now we create the logical volumes. In this example, we create a separate
<path>usr/</path> (10 Gb), <path>home/</path> (5 Gb), <path>opt/</path> (2 Gb),
<path>tmp/</path> (2 Gb), <path>var/</path> (5 Gb) and a swap of 512 Mb.
</p>

<pre caption="Creating the logical volumes">
# <i>lvcreate -L10G -nusr vg</i>
# <i>lvcreate -L5G -nhome vg</i>
# <i>lvcreate -L2G -nopt vg</i>
# <i>lvcreate -L2G -ntmp vg</i>
# <i>lvcreate -L5G -nvar vg</i>
# <i>lvcreate -L512M -nswap vg</i>
</pre>

<p>
As of now, the logical volumes are created and usable as they were regular
partitions:
</p>

<pre caption="Listing the logical volumes">
# <i>ls /dev/vg</i>
home     opt      swap     tmp     usr      var
</pre>

<p>
<e>These</e> files are now your "partitions" (logical volumes).
</p>

</body>
</subsection>
</section>
-->
<section id="filesystems">
<title>Creating Filesystems</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Now that your partitions are created, it is time to place a filesystem on them. 
If you don't care about what filesystem to choose and are happy with what we use
as default in this handbook, continue with <uri 
link="#filesystems-apply">Applying a Filesystem to a Partition</uri>.
Otherwise read on to learn about the available filesystems...
</p>

</body>
</subsection>
<subsection>
<title>Filesystems?</title>
<body>

<p>
Several filesystems are available. Some of them are found stable on all
architectures, others only on a few. The following table lists the available
filesystems and the architectures they are known to work on. If an architecture
is contained within "(...)" then the filesystem should work but is untested.
</p>

<table>
<tr>
  <th>Filesystem</th>
  <th>Journaled</th>
  <th>Architectures</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti>no</ti>
  <ti>All architectures</ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti>yes</ti>
  <ti>All architectures</ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti>yes</ti>
  <ti>x86, hppa, alpha, (mips), (pcc), (amd64)</ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti>yes</ti>
  <ti>x86, alpha, amd64, (ppc)</ti> <!-- TODO when xfs is in mips-sources, add "(mips)" -->
</tr>
<tr>
  <ti>jfs</ti>
  <ti>yes</ti>
  <ti>x86, alpha, (mips), (amd64)</ti>
</tr>
</table>

<p>
<b>ext2</b> is the tried and true Linux filesystem but doesn't have metadata
journaling, which means that routine ext2 filesystem checks at startup time can
be quite time-consuming. There is now quite a selection of newer-generation
journaled filesystems that can be checked for consistency very quickly and are
thus generally preferred over their non-journaled counterparts. Journaled
filesystems prevent long delays when you boot your system and your filesystem
happens to be in an inconsistent state.
</p>

<p>
<b>ext3</b> is the journaled version of the ext2 filesystem, providing metadata
journaling for fast recovery in addition to other enhanced journaling modes like
full data and ordered data journaling. ext3 is a very good and reliable
filesystem. It offers generally decent performance under most conditions.
Because it does not extensively employ the use of "trees" in its internal
design, it doesn't scale very well, meaning that it is not an ideal choice for
very large filesystems, or situations where you will be handling very large
files or large quantities of files in a single directory. But when used within
its design parameters, ext3 is an excellent filesystem.
</p>

<p>
<b>ReiserFS</b> is a B*-tree based filesystem that has very good overall 
performance and greatly outperforms both ext2 and ext3 when dealing with small 
files (files less than 4k), often by a factor of 10x-15x. ReiserFS also scales 
extremely well and has metadata journaling. As of kernel 2.4.18+, ReiserFS is 
now rock-solid and highly recommended for use both as a general-purpose 
filesystem and for extreme cases such as the creation of large filesystems, the 
use of many small files, very large files and directories containing tens of 
thousands of files. 
</p>

<p>
<b>XFS</b> is a filesystem with metadata journaling that is fully supported 
under Gentoo Linux's xfs-sources kernel. It comes with a robust feature-set and
is optimized for scalability. We only recommend using this filesystem on Linux
systems with high-end SCSI and/or fibre channel storage and a uninterruptible
power supply. Because XFS aggressively caches in-transit data in RAM, improperly
designed programs (those that don't take proper precautions when writing files
to disk and there are quite a few of them) can lose a good deal of data if the
system goes down unexpectedly.
</p>

<p>
<b>JFS</b> is IBM's high-performance journaling filesystem. It has recently 
become production-ready and there hasn't been a sufficient track record to 
comment positively nor negatively on its general stability at this point.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Applying a Filesystem to a Partition</title>
<body>

<p>
To create a filesystem on a partition or volume, there are tools available for 
each possible filesystem:
</p>

<table>
<tr>
  <th>Filesystem</th>
  <th>Creation Command</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
For instance, to have the boot partition (<path>/dev/hda1</path> in our
example) in ext2 and the root partition (<path>/dev/hda3</path> in our example)
in ext3 (as in our example), you would use:
</p>

<pre caption="Applying a filesystem on a partition">
# <i>mke2fs /dev/hda1</i>
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
Now create the filesystems on your newly created partitions (or logical
volumes).
</p>

</body>
</subsection>
<subsection>
<title>Activating the Swap Partition</title>
<body>

<p>
<c>mkswap</c> is the command that is used to initialize swap partitions:
</p>

<pre caption="Creating a Swap signature">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
To activate the swap partition, use <c>swapon</c>:
</p>

<pre caption="Activating the swap partition">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Create and activate the swap now.
</p>

</body>
</subsection>
</section>
<section>
<title>Mounting</title>
<body>

<p>
Now that your partitions are initialized and are housing a filesystem, it is
time to mount those partitions. Use the <c>mount</c> command. Don't forget to
create the necessary mount directories:
</p>

<pre caption="Mounting partitions">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
If you want your <path>/tmp</path> to reside on a separate partition, be sure to
change its permissions after mounting: <c>chmod 1777 /mnt/gentoo/tmp</c>. This
also holds for <path>/var/tmp</path>.
</note>

<p>
We also need to mount the proc filesystem (a virtual interface with the kernel)
on <path>/proc</path>. We first create the <path>/mnt/gentoo/proc</path> 
mountpoint:
</p>

<pre caption="Creating the /mnt/gentoo/proc mountpoint">
# <i>mkdir /mnt/gentoo/proc</i>
</pre>

<p>
If you are installing Gentoo from a LiveCD, you just need to mount
<path>proc</path>:
</p>

<pre caption="Mounting proc">
# <i>mount -t proc none /mnt/gentoo/proc</i>
</pre>

<p>
If you are not installing Gentoo from a Gentoo LiveCD, you need to
bindmount <path>/proc</path>:
</p>

<pre caption="Bind-mounting proc">
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
</pre>

<p>
Now continue with <uri link="?part=1&amp;chap=5">Installing the Gentoo
Installation Files</uri>.
</p>

</body>
</section>
</sections>
